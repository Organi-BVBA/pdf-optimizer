---
kind: pipeline
name: Default

trigger:
  event:
    include:
      - push

steps:
  - name: Install js packages
    image: node:16
    commands:
      - yarn

  - name: Build assets
    image: node:16
    commands:
      - yarn build
    depends_on:
      - Install js packages

  - name: Install php packages
    image: composer
    volumes:
      - name: composer_cache
        path: /root/composer/
    commands:
      - composer install --no-interaction --ignore-platform-reqs
      - composer install --working-dir=tools/php-cs-fixer
      - composer install --working-dir=tools/phpcs

  - name: Wait for mysql
    image: mysql:5.7
    commands:
      - while ! mysqladmin ping -h mysql -u root -proot --silent; do sleep 1; done

  - name: Initialize project
    image: docker.organi.be/webshop-base
    environment:
      DB_HOST: mysql
      DB_USERNAME: root
      DB_PASSWORD: root
    commands:
      - cp .env.example .env
      - php artisan key:generate
      - php artisan migrate --force
      - php artisan db:seed --force
      - php artisan route:cache
    depends_on:
      - Wait for mysql
      - Install php packages

  - name: Run tests
    image: docker.organi.be/webshop-base
    environment:
      DB_HOST: mysql
      DB_USERNAME: root
      DB_PASSWORD: root
    commands:
      - vendor/bin/phpunit -d memory_limit=2048M
    depends_on:
      - Initialize project
      - Build assets

  - name: Run php linter
    image: php:8.1
    commands:
      - tools/phpcbf/vendor/bin/phpcbf > /dev/null || true
      - tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --config .php-cs-fixer.dist.php
    depends_on:
      - Install php packages

  - name: Commit changes by php linter
    image: alpine/git
    commands:
      - git add app database config tests
      - git diff-index --quiet HEAD || git commit -m "[skip ci] :art:\ Format"
      - git pull origin $DRONE_TARGET_BRANCH --no-rebase
      - git push --set-upstream origin $DRONE_TARGET_BRANCH
    depends_on:
      - Run php linter

services:
  - name: mysql
    image: mysql:5.7
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root

volumes:
  - name: composer_cache
    host:
      path: /var/lib/composer_cache


---
kind: pipeline
name: Build Docker container (latest)

trigger:
  event:
    include:
      - push
  branch:
    - master

steps:
  - name: Build Docker container
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build -t docker.organi.be/image-optimizer:latest .

  - name: Publish Docker container
    image: docker
    environment:
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker push docker.organi.be/image-optimizer:latest

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
name: Build Docker container (develop)
depends_on:
  - Default

trigger:
  event:
    include:
      - push
  branch:
    - develop

steps:
  - name: Build Docker container
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build -t docker.organi.be/image-optimizer:develop .

  - name: Publish Docker container
    image: docker
    environment:
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker push docker.organi.be/image-optimizer:develop

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
name: Build Docker for specific tag
depends_on:
  - Default

trigger:
  event:
    include:
      - tag

steps:
  - name: Build Docker container
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build -t docker.organi.be/image-optimizer:$DRONE_TAG .

  - name: Publish Docker container
    image: docker
    environment:
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker push docker.organi.be/image-optimizer:$DRONE_TAG

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
